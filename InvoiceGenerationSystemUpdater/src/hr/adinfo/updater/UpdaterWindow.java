/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.adinfo.updater;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Matej
 */
public class UpdaterWindow extends javax.swing.JFrame {

	/**
	 * Creates new form UpdaterWindow
	 */
	public UpdaterWindow() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Molimo pričekajte...");

        jLabel1.setText("Molimo pričekajte...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(155, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel1)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(UpdaterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(UpdaterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(UpdaterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(UpdaterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		
		if(args.length != 1){
			JOptionPane.showMessageDialog(null, "Program za ažuriranje ne može se pokrenuti direktno. Molimo prvo pokrenite aplikaciju.");
			return;
		}
		
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new UpdaterWindow().setVisible(true);
			}
		});
		
		try {
			Thread.sleep(5000);
		} catch (InterruptedException ex) {}
	
		ArrayList<String> sourcePaths = new ArrayList<String>();
		ArrayList<String> targetPaths = new ArrayList<String>();
		String command = "";
		
		if("server".equals(args[0])){
			sourcePaths.add("InvoiceGenerationSystemServer.jar");
			targetPaths.add(".." + File.separator + "InvoiceGenerationSystemServer.jar");
			
			sourcePaths.add("InvoiceGenerationSystemUtils.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "InvoiceGenerationSystemUtils.jar");
			
			sourcePaths.add("itextpdf-5.4.0.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "itextpdf-5.4.0.jar");
			
			command = "java -jar InvoiceGenerationSystemServer.jar";
		} else if("client".equals(args[0])){
			sourcePaths.add("InvoiceGenerationSystemClient.jar");
			targetPaths.add(".." + File.separator + "InvoiceGenerationSystemClient.jar");
			
			sourcePaths.add("InvoiceGenerationSystemUtils.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "InvoiceGenerationSystemUtils.jar");
			
			sourcePaths.add("itextpdf-5.4.0.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "itextpdf-5.4.0.jar");
			
			command = "java -jar InvoiceGenerationSystemClient.jar";
		} else if("control".equals(args[0])){
			sourcePaths.add("InvoiceGenerationSystemControl.jar");
			targetPaths.add(".." + File.separator + "InvoiceGenerationSystemControl.jar");
			
			sourcePaths.add("InvoiceGenerationSystemUtils.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "InvoiceGenerationSystemUtils.jar");
			
			sourcePaths.add("InvoiceGenerationSystemClient.jar");
			targetPaths.add(".." + File.separator + "InvoiceGenerationSystemClient.jar");
			
			sourcePaths.add("itextpdf-5.4.0.jar");
			targetPaths.add(".." + File.separator + "lib" + File.separator + "itextpdf-5.4.0.jar");
			
			command = "java -jar InvoiceGenerationSystemControl.jar";
		} else {
			JOptionPane.showMessageDialog(null, "Pogreška tijekom ažuriranja. Molimo ponovno pokrenite aplikaciju.");
			System.exit(0);
		}
		
		try {
			for(int i = 0; i < sourcePaths.size(); ++i){
				Files.copy(Paths.get(sourcePaths.get(i)), Paths.get(targetPaths.get(i)), StandardCopyOption.REPLACE_EXISTING);
			}
			
			String targetWorkingDirectory = Paths.get("").toAbsolutePath().getParent().toString();
			Process proc = Runtime.getRuntime().exec(command, null, new File(targetWorkingDirectory));
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(null, "Pogreška tijekom ažuriranja. Molimo ponovno pokrenite aplikaciju." + System.lineSeparator() + ex);
			System.exit(0);
		}
		
		System.exit(0);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
